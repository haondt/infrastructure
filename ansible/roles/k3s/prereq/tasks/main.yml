- name: Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true
  when: ansible_all_ipv6_addresses | length > 0

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Check for Apparmor existence
  ansible.builtin.stat:
    path: /sys/module/apparmor/parameters/enabled
  register: apparmor_enabled

- name: Check if Apparmor is enabled
  when: apparmor_enabled.stat.exists
  ansible.builtin.command: cat /sys/module/apparmor/parameters/enabled
  register: apparmor_status
  changed_when: false

- name: Install Apparmor Parser [Debian]
  when:
    - ansible_distribution == 'Debian'
    - ansible_facts['distribution_major_version'] == "11"
    - apparmor_status is defined
    - apparmor_status.stdout == "Y"
  ansible.builtin.package:
    name: apparmor
    state: present

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Setup alternative K3s directory
  when:
    - k3s_server_location is defined
    - k3s_server_location != "/var/lib/rancher/k3s"
  block:
    - name: Make rancher directory
      ansible.builtin.file:
        path: "/var/lib/rancher"
        mode: "0755"
        state: directory
    - name: Create symlink
      ansible.builtin.file:
        dest: /var/lib/rancher/k3s
        src: "{{ k3s_server_location }}"
        force: true
        state: link

- name: Set up kube-vip on first node
  when: inventory_hostname == groups[target_hosts][0] or ansible_host == groups[target_hosts][0]
  block:
    - name: Create manifests directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests
        state: directory
        owner: root
        group: root
        mode: "0644"

    - name: Download vip cloud provider manifest
      ansible.builtin.get_url:
        url: https://kube-vip.io/manifests/rbac.yaml
        dest: /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
        owner: root
        group: root
        mode: "0644"

    - name: Get latest kube-vip version
      ansible.builtin.uri:
        url: https://api.github.com/repos/kube-vip/kube-vip/releases/latest
        return_content: yes
      register: kube_vip_release

    - name: Get default network interface
      ansible.builtin.set_fact:
        node_interface: "{{ ansible_default_ipv4.interface }}"

    - name: Generate kube-vip DaemonSet manifest
      ansible.builtin.shell: |
        docker run --network host --rm ghcr.io/kube-vip/kube-vip:{{ (kube_vip_release.content | from_json).name }} manifest daemonset \
            --interface {{ node_interface }} \
            --address {{ k3s_cluster_control_plane_ip }} \
            --inCluster \
            --taint \
            --controlplane \
            --services \
            --arp \
            --leaderElection
      delegate_to: 127.0.0.1
      become: false
      register: kube_vip_daemonset
      changed_when: false

    - name: Write kube-vip DaemonSet manifest
      ansible.builtin.copy:
        content: "{{ kube_vip_daemonset.stdout }}"
        dest: /var/lib/rancher/k3s/server/manifests/kube-vip-daemonset.yaml
        owner: root
        group: root
        mode: "0644"

- name: Setup extra manifests
  when: k3s_extra_manifests is defined
  block:
    - name: Make manifests directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests
        state: directory
        owner: root
        group: root
        mode: "0644"
    - name: Copy manifests
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/var/lib/rancher/k3s/server/manifests"
        mode: "0600"
      loop: "{{ k3s_extra_manifests }}"

- name: Setup optional private registry configuration
  when: registries_config_yaml is defined
  block:
    - name: Make k3s config directory
      ansible.builtin.file:
        path: "/etc/rancher/k3s"
        mode: "0755"
        state: directory
    - name: Copy config values
      ansible.builtin.copy:
        content: "{{ registries_config_yaml }}"
        dest: "/etc/rancher/k3s/registries.yaml"
        mode: "0644"
