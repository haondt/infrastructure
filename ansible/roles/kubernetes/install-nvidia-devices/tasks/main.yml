---
- name: Set role defaults
  set_fact:
    nvidia: "{{ role_defaults | combine(nvidia, recursive=True) }}"

- name: Add NVIDIA Container Toolkit GPG key
  become: true
  ansible.builtin.shell:
    cmd: curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
    creates: /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg

- name: Add NVIDIA Container Toolkit repository
  become: true
  ansible.builtin.shell:
    cmd: |
      curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
        sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' > /etc/apt/sources.list.d/nvidia-container-toolkit.list
    creates: /etc/apt/sources.list.d/nvidia-container-toolkit.list

- name: Update APT cache after adding NVIDIA Container Toolkit repo
  become: true
  ansible.builtin.apt:
    update_cache: yes
  changed_when: false


- name: Install NVIDIA container toolkit
  become: true
  apt:
    name: 
      - nvidia-container-toolkit={{ nvidia.toolkit_version }}
      - nvidia-container-toolkit-base={{ nvidia.toolkit_version }}
      - libnvidia-container-tools={{ nvidia.toolkit_version }}
      - libnvidia-container1={{ nvidia.toolkit_version }}
    state: present

- name: Configure containerd
  become: true
  command: nvidia-ctk runtime configure --runtime=containerd
  args:
    creates: /etc/containerd/config.toml
  register: containerd_config

- name: Restart containerd and k3s
  when: containerd_config.changed
  become: true
  systemd:
    name: "{{ item }}"
    state: restarted
  loop: [containerd, k3s]

- name: Template nvidia custom resources
  template:
    src: custom-resources.yaml.j2
    dest: "{{ haondt.artifacts }}/nvidia-resources.yaml"
  delegate_to: 127.0.0.1

- name: Apply nvidia custom resources
  k8s:
    kubeconfig: "{{ kubernetes.kubeconfig }}"
    context: "{{ kubernetes.context }}"
    state: present
    src: "{{ haondt.artifacts }}/nvidia-resources.yaml"
  delegate_to: 127.0.0.1

- name: Install nvidia k8s-device-plugin via Helm
  block:
    - name: Add nvidia Helm repo
      kubernetes.core.helm_repository:
        kubeconfig: "{{ kubernetes.kubeconfig }}"
        context: "{{ kubernetes.context }}"
        name: nvdp
        repo_url: https://nvidia.github.io/k8s-device-plugin
    - name: Install nvidia-device-plugin Helm chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubernetes.kubeconfig }}"
        context: "{{ kubernetes.context }}"
        name: nvdp
        chart_ref: nvdp/nvidia-device-plugin
        release_namespace: "nvidia-device-plugin"
        chart_version: "{{ nvidia.device_plugin_chart_version }}"
        release_state: present
        create_namespace: true
        values:
          runtimeClassName: nvidia
  delegate_to: 127.0.0.1

- name: install dcgm-exporter
  block:
    - name: Add nvidia Helm repo
      kubernetes.core.helm_repository:
        kubeconfig: "{{ kubernetes.kubeconfig }}"
        context: "{{ kubernetes.context }}"
        name: gpu-helm-charts
        repo_url: https://nvidia.github.io/dcgm-exporter/helm-charts
    - name: Install dcgm-exporter Helm chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubernetes.kubeconfig }}"
        context: "{{ kubernetes.context }}"
        name: dcgm-exporter
        chart_ref: gpu-helm-charts/dcgm-exporter
        release_namespace: "dcgm-exporter"
        chart_version: "{{ nvidia.dcgm_exporter_chart_version }}"
        release_state: present
        create_namespace: true
        values:
          runtimeClassName: nvidia
          serviceMonitor:
            enabled: false
    - name: Template dcgm-exporter alloy custom resources
      template:
        src: alloy-resources.yaml.j2
        dest: "{{ haondt.artifacts }}/dcgm-exporter-alloy-resources.yaml"
    - name: Apply dcgm-exporter alloy custom resources
      k8s:
        kubeconfig: "{{ kubernetes.kubeconfig }}"
        context: "{{ kubernetes.context }}"
        state: present
        src: "{{ haondt.artifacts }}/dcgm-exporter-alloy-resources.yaml"
  when: kubernetes.alloy.enabled
  delegate_to: 127.0.0.1

- name: Add gpu.present label to node
  k8s:
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        name: "{{ inventory_hostname }}"
        labels:
          nvidia.com/gpu.present: "true"
