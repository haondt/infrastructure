---
- name: Set role defaults
  set_fact:
    kubernetes: "{{ role_defaults | combine(kubernetes, recursive=True) }}"

- name: Template ingress-nginx kustomization
  template:
    src: kustomization.yaml.j2
    dest: "{{ haondt.artifacts }}/kustomization.yaml"
  delegate_to: 127.0.0.1

- name: Build ingress-nginx manifests with kustomize
  shell: kubectl kustomize "{{ haondt.artifacts }}" --load-restrictor LoadRestrictionsNone
  register: ingress_nginx_manifests
  delegate_to: 127.0.0.1
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"

- name: Apply ingress-nginx manifests
  k8s:
    kubeconfig: "{{ kubernetes.kubeconfig }}"
    state: present
    definition: "{{ ingress_nginx_manifests.stdout | from_yaml_all }}"
  delegate_to: 127.0.0.1

- name: Wait for ingress-nginx controller to be ready
  k8s_info:
    kubeconfig: "{{ kubernetes.kubeconfig }}"
    api_version: apps/v1
    kind: Deployment
    name: ingress-nginx-controller
    namespace: ingress-nginx
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 300
  delegate_to: 127.0.0.1

- name: Get ingress-nginx service ports
  k8s_info:
    kubeconfig: "{{ kubernetes.kubeconfig }}"
    api_version: v1
    kind: Service
    name: ingress-nginx-controller
    namespace: ingress-nginx
  register: ingress_service
  delegate_to: 127.0.0.1

- name: Display ingress-nginx NodePort information
  debug:
    msg: |
      Ingress-nginx is accessible at:
      {% for port in ingress_service.resources[0].spec.ports %}
      - {{ port.name }}: {{ kubernetes.cluster_ip }}:{{ port.nodePort }} ({{ port.protocol }}/{{ port.port }})
      {% endfor %}
  when: kubernetes.ingress_nginx.node_port.enabled

