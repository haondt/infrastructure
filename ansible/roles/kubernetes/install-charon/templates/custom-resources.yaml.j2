apiVersion: v1
kind: Namespace
metadata:
  name: {{ kubernetes.charon.namespace }}
  labels:
    app.kubernetes.io/name: {{ kubernetes.charon.namespace }}
    infra.haondt.dev/managed-by: ansible

{% for repository_name, repository in kubernetes.charon.repositories.items() %}
{% if repository.config_map is defined %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: repository-{{ repository_name }}
  namespace: {{ kubernetes.charon.namespace }}
  annotations:
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
data:
{% for k, v in repository.config_map.items() %}
  {{ k }}: |-
    {{ v | indent(4) }}
{% endfor %}
{% endif %}
{% if repository.secret is defined %}
---
apiVersion: v1
kind: Secret
metadata:
  name: repository-{{ repository_name }}
  namespace: {{ kubernetes.charon.namespace }}
  annotations:
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
stringData:
{% for k, v in repository.secret.items() %}
  {{ k }}: |-
    {{ v | indent(4) }}
{% endfor %}
{% endif %}
{% endfor %}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-base-configmaps
  namespace: {{ kubernetes.charon.namespace }}
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-base-secrets
  namespace: {{ kubernetes.charon.namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
